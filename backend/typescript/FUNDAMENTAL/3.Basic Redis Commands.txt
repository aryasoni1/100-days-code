### 🗝️ **Basic Redis Commands**

Redis supports a variety of data types and commands optimized for speed, caching, messaging, and more.

---

## 🔑 **1. Key-Based Commands**

| Command         | Description                         |
| --------------- | ----------------------------------- |
| `SET key value` | Set a string value                  |
| `GET key`       | Get the value of a key              |
| `DEL key`       | Delete a key                        |
| `EXISTS key`    | Check if a key exists (returns 0/1) |

```bash
SET user "John"
GET user
DEL user
EXISTS user
```

---

## ⏳ **2. Expiry & TTL**

| Command             | Description                           |
| ------------------- | ------------------------------------- |
| `EXPIRE key sec`    | Set key expiration in seconds         |
| `TTL key`           | Get remaining time-to-live in seconds |
| `SETEX key sec val` | Set key and expiration in one command |

```bash
SETEX temp 10 "expires soon"
TTL temp
EXPIRE temp 30
```

---

## 🧱 **3. Data Types in Redis**

### 🔹 **Strings**

```bash
SET name "Alice"
GET name
```

### 🔹 **Lists** (ordered collection, like a queue)

```bash
LPUSH tasks "task1"
RPUSH tasks "task2"
LRANGE tasks 0 -1     # Get all list items
LPOP tasks            # Remove first
```

### 🔹 **Hashes** (like objects or dictionaries)

```bash
HSET user:1 name "Alice" age 25
HGETALL user:1
HGET user:1 name
```

### 🔹 **Sets** (unordered, unique values)

```bash
SADD tags "js" "node" "redis"
SMEMBERS tags
SISMEMBER tags "node"
```

### 🔹 **Sorted Sets** (unique with scores)

```bash
ZADD scores 100 "Bob" 200 "Alice"
ZRANGE scores 0 -1 WITHSCORES
```

---

Would you like a cheat sheet or examples for Redis in **Node.js**, **Python**, or as a **cache layer**?
